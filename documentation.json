{
    "pipes": [],
    "interfaces": [
        {
            "name": "BaseData",
            "id": "interface-BaseData-b09d06507f37cc5473ee7189a0274824",
            "file": "src/app/interfaces/index.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface BaseData {\n  name: string;\n  patronus: string;\n  age: number;\n  image: string;\n  dateOfBirth?: string;\n  yearOfBirth?: number;\n}\n\nexport interface Character extends BaseData {}\n\nexport interface Student extends BaseData {}\n\nexport interface Teacher extends BaseData {}\n\nexport interface HogwartsTableHeader {\n  columnDef: string;\n  header: string;\n  textField: string;\n}\n\n",
            "properties": [
                {
                    "name": "age",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "dateOfBirth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "patronus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "yearOfBirth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "Character",
            "id": "interface-Character-b09d06507f37cc5473ee7189a0274824",
            "file": "src/app/interfaces/index.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface BaseData {\n  name: string;\n  patronus: string;\n  age: number;\n  image: string;\n  dateOfBirth?: string;\n  yearOfBirth?: number;\n}\n\nexport interface Character extends BaseData {}\n\nexport interface Student extends BaseData {}\n\nexport interface Teacher extends BaseData {}\n\nexport interface HogwartsTableHeader {\n  columnDef: string;\n  header: string;\n  textField: string;\n}\n\n",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": "BaseData"
        },
        {
            "name": "HogwartsTableHeader",
            "id": "interface-HogwartsTableHeader-b09d06507f37cc5473ee7189a0274824",
            "file": "src/app/interfaces/index.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface BaseData {\n  name: string;\n  patronus: string;\n  age: number;\n  image: string;\n  dateOfBirth?: string;\n  yearOfBirth?: number;\n}\n\nexport interface Character extends BaseData {}\n\nexport interface Student extends BaseData {}\n\nexport interface Teacher extends BaseData {}\n\nexport interface HogwartsTableHeader {\n  columnDef: string;\n  header: string;\n  textField: string;\n}\n\n",
            "properties": [
                {
                    "name": "columnDef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "header",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "textField",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "House",
            "id": "interface-House-98bd2af3a94c5b2b87b457fcbdaa75c5",
            "file": "src/app/pages/characters/characters.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Character } from 'src/app/interfaces';\nimport { CharactersService } from 'src/app/services/characters.service';\n\ninterface House {\n  value: string;\n  viewValue: string;\n}\n\nconst HOUSES = [\n  { value: 'slytherin', viewValue: 'Slytherin' },\n  { value: 'gryffindor', viewValue: 'Gryffindor' },\n  { value: 'ravenclaw', viewValue: 'Ravenclaw' },\n  { value: 'hufflepuff', viewValue: 'Hufflepuff' },\n];\n\n@Component({\n  selector: 'app-characters',\n  templateUrl: './characters.component.html',\n  styleUrls: ['./characters.component.css'],\n})\nexport class CharactersComponent implements OnInit {\n  charactersData: Character[] = [];\n  houses: House[] = [...HOUSES];\n\n  constructor(private charactersService: CharactersService) {}\n\n  ngOnInit(): void {\n    this.handleChange('slytherin');\n  }\n\n  handleChange(house: string): void {\n    this.charactersService.list(house).subscribe((respData: Character[]) => {\n      this.charactersData = respData;\n    });\n  }\n}\n",
            "properties": [
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "viewValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "Student",
            "id": "interface-Student-b09d06507f37cc5473ee7189a0274824",
            "file": "src/app/interfaces/index.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface BaseData {\n  name: string;\n  patronus: string;\n  age: number;\n  image: string;\n  dateOfBirth?: string;\n  yearOfBirth?: number;\n}\n\nexport interface Character extends BaseData {}\n\nexport interface Student extends BaseData {}\n\nexport interface Teacher extends BaseData {}\n\nexport interface HogwartsTableHeader {\n  columnDef: string;\n  header: string;\n  textField: string;\n}\n\n",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": "BaseData"
        },
        {
            "name": "Teacher",
            "id": "interface-Teacher-b09d06507f37cc5473ee7189a0274824",
            "file": "src/app/interfaces/index.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface BaseData {\n  name: string;\n  patronus: string;\n  age: number;\n  image: string;\n  dateOfBirth?: string;\n  yearOfBirth?: number;\n}\n\nexport interface Character extends BaseData {}\n\nexport interface Student extends BaseData {}\n\nexport interface Teacher extends BaseData {}\n\nexport interface HogwartsTableHeader {\n  columnDef: string;\n  header: string;\n  textField: string;\n}\n\n",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": "BaseData"
        }
    ],
    "injectables": [
        {
            "name": "CharactersService",
            "id": "injectable-CharactersService-3f948c4359997fc9a670196372ff08ea",
            "file": "src/app/services/characters.service.ts",
            "properties": [
                {
                    "name": "urlAPI",
                    "defaultValue": "`${environment.urlAPI}/characters/house`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "list",
                    "args": [
                        {
                            "name": "houseName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Character[]>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "houseName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { BaseData, Character } from '../interfaces';\nimport { calculateAge } from '../utils/calculateAge';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CharactersService {\n  private urlAPI = `${environment.urlAPI}/characters/house`;\n  constructor(private http: HttpClient) {}\n\n  list(houseName: string): Observable<Character[]> {\n    return this.http.get<BaseData[]>(`${this.urlAPI}/${houseName}`).pipe(\n      map((v: BaseData[]) => {\n        return v.map((character) => ({\n          name: character.name,\n          patronus: character.patronus,\n          age:\n            calculateAge(character.dateOfBirth || '', character.yearOfBirth),\n          image: character.image,\n        }));\n      })\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "NewStudentsService",
            "id": "injectable-NewStudentsService-ea09b8967170aa381e003b5f73e317b1",
            "file": "src/app/services/new-students.service.ts",
            "properties": [
                {
                    "name": "newStudents$",
                    "defaultValue": "new BehaviorSubject<Student[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<Student[]>",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methods": [
                {
                    "name": "add",
                    "args": [
                        {
                            "name": "student",
                            "type": "Student",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "student",
                            "type": "Student",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Student } from '../interfaces';\nimport { calculateAge } from '../utils/calculateAge';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NewStudentsService {\n  newStudents$: BehaviorSubject<Student[]> = new BehaviorSubject<Student[]>([]);\n  constructor() {}\n\n  add(student: Student): void {\n    this.newStudents$.next([\n      ...this.newStudents$.getValue(),\n      { ...student, age: calculateAge(student.dateOfBirth || '') },\n    ]);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "type": "injectable"
        },
        {
            "name": "StudentsService",
            "id": "injectable-StudentsService-170933f73d7918ddc9094b6aba87bb07",
            "file": "src/app/services/students.service.ts",
            "properties": [
                {
                    "name": "urlAPI",
                    "defaultValue": "`${environment.urlAPI}/characters/students`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "list",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Student[]>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Student } from '../interfaces';\nimport { calculateAge } from '../utils/calculateAge';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StudentsService {\n  private urlAPI = `${environment.urlAPI}/characters/students`;\n  constructor(private http: HttpClient) {}\n\n  list(): Observable<Student[]> {\n    return this.http.get<Student[]>(this.urlAPI).pipe(\n      map((v: Student[]) => {\n        return v.map((character) => ({\n          name: character.name,\n          patronus: character.patronus,\n          age: calculateAge(character.dateOfBirth || ''),\n          image: character.image,\n          dateOfBirth: character.dateOfBirth,\n        }));\n      })\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "TeachersService",
            "id": "injectable-TeachersService-ce1fac9acf59688aa9bbd879a4f58bef",
            "file": "src/app/services/teachers.service.ts",
            "properties": [
                {
                    "name": "urlAPI",
                    "defaultValue": "`${environment.urlAPI}/characters/staff`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "list",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Teacher[]>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Teacher } from '../interfaces';\nimport { calculateAge } from '../utils/calculateAge';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TeachersService {\n  private urlAPI = `${environment.urlAPI}/characters/staff`;\n  constructor(private http: HttpClient) {}\n\n  list(): Observable<Teacher[]> {\n    return this.http.get<Teacher[]>(this.urlAPI).pipe(\n      map((v: Teacher[]) => {\n        return v.map((character) => ({\n          name: character.name,\n          patronus: character.patronus,\n          age: calculateAge(character.dateOfBirth || ''),\n          image: character.image,\n          dateOfBirth: character.dateOfBirth,\n        }));\n      })\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-348e1c52f397d054cd22e104064eb51c",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'hogwarts-project'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'hogwarts-project';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".link-active {\n  background-color: rgba(121, 120, 120, 0.384);\n}\n\n.custom-toolbar {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}",
                    "styleUrl": "./app.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-toolbar class=\"custom-toolbar\" color=\"primary\">\n  <div id=\"projectName\">\n    <span>Hogwarts Project</span>\n  </div>\n  <div id=\"links\">\n    <a mat-button routerLink=\"/characters\" routerLinkActive=\"link-active\"\n      >Personajes</a\n    >\n    <a mat-button routerLink=\"/students\" routerLinkActive=\"link-active\"\n      >Estudiantes</a\n    >\n    <a mat-button routerLink=\"/teachers\" routerLinkActive=\"link-active\"\n      >Profesores</a\n    >\n    <a mat-button routerLink=\"/new-students\" routerLinkActive=\"link-active\"\n      >Nuevos Estudiantes</a\n    >\n  </div>\n</mat-toolbar>\n<router-outlet></router-outlet>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-642c6c4e474cd5a0ac760dfda26b2fc9",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "What background color to use",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 711,
                            "end": 724,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 322,
                            "tagName": {
                                "pos": 712,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "Button contents",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string"
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Is this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean"
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "How large should the button be?",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "CharactersComponent",
            "id": "component-CharactersComponent-98bd2af3a94c5b2b87b457fcbdaa75c5",
            "file": "src/app/pages/characters/characters.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-characters",
            "styleUrls": [
                "./characters.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./characters.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "charactersData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Character[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "houses",
                    "defaultValue": "[...HOUSES]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "House[]",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "handleChange",
                    "args": [
                        {
                            "name": "house",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "house",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Character } from 'src/app/interfaces';\nimport { CharactersService } from 'src/app/services/characters.service';\n\ninterface House {\n  value: string;\n  viewValue: string;\n}\n\nconst HOUSES = [\n  { value: 'slytherin', viewValue: 'Slytherin' },\n  { value: 'gryffindor', viewValue: 'Gryffindor' },\n  { value: 'ravenclaw', viewValue: 'Ravenclaw' },\n  { value: 'hufflepuff', viewValue: 'Hufflepuff' },\n];\n\n@Component({\n  selector: 'app-characters',\n  templateUrl: './characters.component.html',\n  styleUrls: ['./characters.component.css'],\n})\nexport class CharactersComponent implements OnInit {\n  charactersData: Character[] = [];\n  houses: House[] = [...HOUSES];\n\n  constructor(private charactersService: CharactersService) {}\n\n  ngOnInit(): void {\n    this.handleChange('slytherin');\n  }\n\n  handleChange(house: string): void {\n    this.charactersService.list(house).subscribe((respData: Character[]) => {\n      this.charactersData = respData;\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./characters.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "charactersService",
                        "type": "CharactersService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "charactersService",
                        "type": "CharactersService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-card>\n  <mat-card-header>\n    <mat-card-title>Personajes</mat-card-title>\n  </mat-card-header>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Seleccionar una Casa</mat-label>\n    <mat-select (selectionChange)=\"handleChange($event.value)\" value=\"slytherin\">\n      <mat-option *ngFor=\"let house of houses\" [value]=\"house.value\">\n        {{house.viewValue}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-card-content>\n    <app-table-hogwarts [data]=\"charactersData\"></app-table-hogwarts>\n  </mat-card-content>\n</mat-card>"
        },
        {
            "name": "NewStudentsComponent",
            "id": "component-NewStudentsComponent-1028b3ad248853dee039842c68f786de",
            "file": "src/app/pages/new-students/new-students.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-new-students",
            "styleUrls": [
                "./new-students.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./new-students.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataStudents",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Student[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Student } from 'src/app/interfaces';\nimport { NewStudentsService } from 'src/app/services/new-students.service';\n\n@Component({\n  selector: 'app-new-students',\n  templateUrl: './new-students.component.html',\n  styleUrls: ['./new-students.component.css'],\n})\nexport class NewStudentsComponent implements OnInit {\n  dataStudents: Student[] = [];\n\n  constructor(private newStudentsServices: NewStudentsService) {}\n\n  ngOnInit(): void {\n    this.newStudentsServices.newStudents$.subscribe((students: Student[]) => {\n      this.dataStudents = students;\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./new-students.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "newStudentsServices",
                        "type": "NewStudentsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "newStudentsServices",
                        "type": "NewStudentsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-card>\n  <mat-card-header>\n    <mat-card-title>Nuevos Estudiantes</mat-card-title>\n    <mat-card-subtitle>\n      <a mat-raised-button routerLink=\"/new-students/create\" color=\"primary\">Añadir Estudiante</a>\n    </mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content>\n    <app-table-hogwarts [data]=\"dataStudents\"></app-table-hogwarts>\n  </mat-card-content>\n</mat-card>\n"
        },
        {
            "name": "StudentFormComponent",
            "id": "component-StudentFormComponent-c655bf0bb768fbbee8d55903e86133d5",
            "file": "src/app/components/student-form/student-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-student-form",
            "styleUrls": [
                "./student-form.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./student-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chargingImage",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "fg",
                    "defaultValue": "new FormGroup({})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "imageURL",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showPreview",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Student } from 'src/app/interfaces';\nimport { NewStudentsService } from 'src/app/services/new-students.service';\n\n@Component({\n  selector: 'app-student-form',\n  templateUrl: './student-form.component.html',\n  styleUrls: ['./student-form.component.css'],\n})\nexport class StudentFormComponent implements OnInit {\n  fg: FormGroup = new FormGroup({});\n  imageURL: string = '';\n  chargingImage = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private newStudentsServices: NewStudentsService,\n    private router: Router,\n  ) {}\n\n  ngOnInit(): void {\n    this.newStudentsServices.newStudents$.subscribe((stundents: Student[]) => {\n      console.log(stundents);\n    });\n    this.fg = this.fb.group({\n      name: ['', Validators.required],\n      patronus: [''],\n      dateOfBirth: [''],\n      image: ['', Validators.required],\n    });\n  }\n\n  showPreview(event: Event) {\n    if (event && event.target) {\n      const file = (event.target as any).files[0];\n      this.chargingImage = true;\n      const reader = new FileReader();\n      reader.onload = () => {\n        this.imageURL = reader.result as string;\n        this.fg.get('image')!.setValue(this.imageURL);\n        this.chargingImage = false;\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n\n  submit() {\n    const newDate = this.fg.value.dateOfBirth\n      ? new Date(this.fg.value.dateOfBirth).toLocaleString().split(' ')[0].split('/').join('-')\n      : this.fg.value.dateOfBirth;\n    if (this.chargingImage || this.fg.invalid) return;\n    this.newStudentsServices.add({...this.fg.value, dateOfBirth: newDate});\n    this.router.navigateByUrl('/new-students')\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "input[type=\"file\"] {\n  display: none;\n}\n\n.upload-image-container {\n  display: flex;\n  width: 30vw;\n  align-items: center;\n}\n\n.custom-file-upload {\n  border: 1px solid #ccc;\n  display: inline-block;\n  padding: 6px 12px;\n  cursor: pointer;\n  border-radius: 5px;\n  background-color: rgb(171, 198, 248);\n  justify-self: flex-start;\n}\n\n.image-container {\n  margin-left: 40px;\n}\n\n.image-preview {\n  height: 100px;\n  width: 130px;\n  border-radius: 5px;\n}\n\nform {\n  display: flex;\n  flex-direction: column;\n}\n",
                    "styleUrl": "./student-form.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "newStudentsServices",
                        "type": "NewStudentsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "newStudentsServices",
                        "type": "NewStudentsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-card>\n  <mat-card-header>\n    <mat-card-title> Añadir un nuevo estudiante </mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <form [formGroup]=\"fg\" (ngSubmit)=\"submit()\">\n      <mat-form-field>\n        <mat-label>Nombre Completo</mat-label>\n        <input matInput formControlName=\"name\" />\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Patronus</mat-label>\n        <input matInput formControlName=\"patronus\" />\n      </mat-form-field>\n      <mat-form-field style=\"width: 20%; min-width: 300px;\" appearance=\"fill\">\n        <mat-label>Fecha de Nacimiento</mat-label>\n        <input matInput [matDatepicker]=\"picker\" formControlName=\"dateOfBirth\" [disabled]=\"true\"/>\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker disabled=\"false\"></mat-datepicker>\n      </mat-form-field>\n      <div class=\"upload-image-container\">\n        <label class=\"custom-file-upload\" for=\"file-upload\">\n          <input\n            id=\"file-upload\"\n            type=\"file\"\n            accept=\"image/*\"\n            (change)=\"showPreview($event)\"\n          />\n          Elegir Foto\n        </label>\n\n        <!-- Image Preview -->\n        <div class=\"image-container\" *ngIf=\"imageURL && imageURL !== ''\">\n          <img [src]=\"imageURL\" [alt]=\"fg.value.name\" class=\"image-preview\" />\n        </div>\n      </div>\n      <mat-error *ngIf=\"fg.controls.image.hasError('required')\">Debe subir una Foto</mat-error>\n      <button mat-button type=\"submit\">Submit</button>\n    </form>\n  </mat-card-content>\n</mat-card>\n"
        },
        {
            "name": "StudentsComponent",
            "id": "component-StudentsComponent-4809bf1ef9a59c32d76182ee78019560",
            "file": "src/app/pages/students/students.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-students",
            "styleUrls": [
                "./students.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./students.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "studentsData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Student[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Student } from 'src/app/interfaces';\nimport { StudentsService } from 'src/app/services/students.service';\n\n@Component({\n  selector: 'app-students',\n  templateUrl: './students.component.html',\n  styleUrls: ['./students.component.css'],\n})\nexport class StudentsComponent implements OnInit {\n  studentsData: Student[] = [];\n\n  constructor(private studentsService: StudentsService) {}\n\n  ngOnInit(): void {\n    this.studentsService.list().subscribe((respData: Student[]) => {\n      this.studentsData = respData;\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./students.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "studentsService",
                        "type": "StudentsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "studentsService",
                        "type": "StudentsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-card>\n  <mat-card-header>\n    <mat-card-title>Estudiantes</mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <app-table-hogwarts [data]=\"studentsData\"></app-table-hogwarts>\n  </mat-card-content>\n</mat-card>\n"
        },
        {
            "name": "TableHogwartsComponent",
            "id": "component-TableHogwartsComponent-7e7d99627d405b637a71c5a268e800ed",
            "file": "src/app/components/table-hogwarts/table-hogwarts.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-table-hogwarts",
            "styleUrls": [
                "./table-hogwarts.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./table-hogwarts.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "columns",
                    "defaultValue": "[\n    {\n      columnDef: 'name',\n      header: 'Nombre',\n      textField: 'name',\n    },\n    {\n      columnDef: 'patronus',\n      header: 'Patronus',\n      textField: 'patronus',\n    },\n    {\n      columnDef: 'age',\n      header: 'Edad',\n      textField: 'age',\n    },\n    {\n      columnDef: 'image',\n      header: 'Foto',\n      textField: 'image',\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "HogwartsTableHeader[]"
                },
                {
                    "name": "data",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "BaseData[]"
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['name', 'patronus', 'age', 'image']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "defaultValue": "new MatTableDataSource(this.data)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "defaultText",
                    "defaultValue": "'-'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "filterValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ]
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "applyFilter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initSortAndPaginator",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "change",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "change",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterViewInit,\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  EventEmitter,\n} from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { BaseData, HogwartsTableHeader } from 'src/app/interfaces';\n\n@Component({\n  selector: 'app-table-hogwarts',\n  templateUrl: './table-hogwarts.component.html',\n  styleUrls: ['./table-hogwarts.component.css'],\n})\nexport class TableHogwartsComponent\n  implements OnInit, AfterViewInit, OnChanges\n{\n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n\n  @Input() columns: HogwartsTableHeader[] = [\n    {\n      columnDef: 'name',\n      header: 'Nombre',\n      textField: 'name',\n    },\n    {\n      columnDef: 'patronus',\n      header: 'Patronus',\n      textField: 'patronus',\n    },\n    {\n      columnDef: 'age',\n      header: 'Edad',\n      textField: 'age',\n    },\n    {\n      columnDef: 'image',\n      header: 'Foto',\n      textField: 'image',\n    },\n  ];\n  @Input() displayedColumns: string[] = ['name', 'patronus', 'age', 'image'];\n  @Input() data: BaseData[] = [];\n\n  dataSource = new MatTableDataSource(this.data);\n  defaultText = '-';\n  filterValue = '';\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  ngAfterViewInit(): void {\n    this.initSortAndPaginator();\n    this.applyFilter();\n  }\n\n  ngOnChanges(change: SimpleChanges): void {\n    this.dataSource = new MatTableDataSource(change.data.currentValue);\n    this.initSortAndPaginator();\n    this.applyFilter();\n  }\n\n  initSortAndPaginator(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n  }\n\n  applyFilter(): void {\n    this.dataSource.filter = this.filterValue.trim().toLowerCase();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "table {\n  width: 100%;\n}\n\nth.mat-sort-header-sorted {\n  color: black;\n}\n\n.table-image {\n  width: 120px;\n  height: 100px;\n  border-radius: 5px;\n}\n",
                    "styleUrl": "./table-hogwarts.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 55
            },
            "implements": [
                "OnInit",
                "AfterViewInit",
                "OnChanges"
            ],
            "templateData": "<mat-card>\n  <mat-card-content>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Filtrar</mat-label>\n      <input matInput (keyup)=\"applyFilter()\" [(ngModel)]=\"filterValue\" placeholder=\"Escribir...\" />\n    </mat-form-field>\n\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n      <div *ngFor=\"let column of columns\" >\n        <div [ngSwitch]=\"column.columnDef\">\n          <ng-container *ngSwitchCase=\"'image'\" [matColumnDef]=\"column.columnDef\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>{{column.header}}</th>\n            <td mat-cell *matCellDef=\"let element\">\n              <img src=\"{{element.image}}\" class=\"table-image\">\n            </td>\n          </ng-container>\n          <ng-container *ngSwitchDefault [matColumnDef]=\"column.columnDef\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>{{column.header}}</th>\n            <td mat-cell *matCellDef=\"let element\">{{ element[column.textField] || defaultText }}</td>\n          </ng-container>\n        </div>\n      </div>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n    </table>\n    <mat-paginator\n      [pageSizeOptions]=\"[5, 10, 20]\"\n      showFirstLastButtons\n      aria-label=\"Select page\"\n    >\n    </mat-paginator>\n  </mat-card-content>\n</mat-card>\n"
        },
        {
            "name": "TeachersComponent",
            "id": "component-TeachersComponent-3e509942f47798b8233ffad8c7a31deb",
            "file": "src/app/pages/teachers/teachers.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-teachers",
            "styleUrls": [
                "./teachers.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./teachers.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "teachersData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Teacher[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Teacher } from 'src/app/interfaces';\nimport { TeachersService } from 'src/app/services/teachers.service';\n\n@Component({\n  selector: 'app-teachers',\n  templateUrl: './teachers.component.html',\n  styleUrls: ['./teachers.component.css']\n})\nexport class TeachersComponent implements OnInit {\n  teachersData: Teacher[] = [];\n\n  constructor(private teachersService: TeachersService) {}\n\n  ngOnInit(): void {\n    this.teachersService.list().subscribe((respData: Teacher[]) => {\n      this.teachersData = respData;\n    });\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./teachers.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "teachersService",
                        "type": "TeachersService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "teachersService",
                        "type": "TeachersService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-card>\n  <mat-card-header>\n    <mat-card-title>Profesores</mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <app-table-hogwarts [data]=\"teachersData\"></app-table-hogwarts>\n  </mat-card-content>\n</mat-card>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-58bbfc21525210626d37cc8071fff1ee",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MaterialModule } from './material-module/material.module';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    MaterialModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-028598a988a556e769efa4e5a7bc653d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: '/characters',\n  },\n  {\n    path: 'characters',\n    loadChildren: () =>\n      \"import('src/app/pages/characters/characters.module').then(\\\n        (m) => m.CharactersModule\\\n      )\",\n  },\n  {\n    path: 'students',\n    loadChildren: () =>\n      \"import('src/app/pages/students/students.module').then(\\\n        (m) => m.StudentsModule\\\n      )\",\n  },\n  {\n    path: 'teachers',\n    loadChildren: () =>\n      \"import('src/app/pages/teachers/teachers.module').then(\\\n        (m) => m.TeachersModule\\\n      )\",\n  },\n  {\n    path: 'new-students',\n    loadChildren: () =>\n      \"import('src/app/pages/new-students/new-students.module').then(\\\n        (m) => m.NewStudentsModule\\\n      )\",\n  },\n  {\n    path: '**',\n    redirectTo: '/characters',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CharactersModule",
            "id": "module-CharactersModule-99410e8b67afffb5a26c055409c3eb7a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/characters/characters.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\n\nimport { CharactersRoutingModule } from './characters-routing.module';\nimport { CharactersComponent } from './characters.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { CommonModule } from '@angular/common';\n\n\n@NgModule({\n  declarations: [\n    CharactersComponent\n  ],\n  imports: [\n    CommonModule,\n    CharactersRoutingModule,\n    SharedModule,\n  ]\n})\nexport class CharactersModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CharactersComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CharactersRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CharactersRoutingModule",
            "id": "module-CharactersRoutingModule-8a35f9674f7627f20f6647562e3f545a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/characters/characters-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CharactersComponent } from './characters.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CharactersComponent,\n  },\n  {\n    path: '**',\n    redirectTo: '/'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CharactersRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MaterialModule",
            "id": "module-MaterialModule-16f4c7b0d9b964afe0924c32b4206dd6",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/material-module/material.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\n\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatNativeDateModule } from '@angular/material/core';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    MatCheckboxModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatNativeDateModule,\n  ],\n  exports: [\n    MatCheckboxModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatNativeDateModule\n  ],\n})\nexport class MaterialModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "NewStudentsModule",
            "id": "module-NewStudentsModule-50c73e26b56e32ac3f05897bb6eb59a2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/new-students/new-students.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NewStudentsRoutingModule } from './new-students-routing.module';\nimport { NewStudentsComponent } from './new-students.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n\n@NgModule({\n  declarations: [\n    NewStudentsComponent\n  ],\n  imports: [\n    CommonModule,\n    NewStudentsRoutingModule,\n    SharedModule,\n  ]\n})\nexport class NewStudentsModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "NewStudentsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "NewStudentsRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "NewStudentsRoutingModule",
            "id": "module-NewStudentsRoutingModule-2aac4001431345d46718475063e86db1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/new-students/new-students-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { StudentFormComponent } from 'src/app/components/student-form/student-form.component';\nimport { NewStudentsComponent } from './new-students.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: '',\n        component: NewStudentsComponent,\n      },\n      {\n        path: 'create',\n        component: StudentFormComponent,\n      }\n    ],\n  },\n  {\n    path: '**',\n    redirectTo: '/'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class NewStudentsRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-3c8c7758d532d074bc30380d9a40982c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/shared.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TableHogwartsComponent } from '../components/table-hogwarts/table-hogwarts.component';\nimport { MaterialModule } from '../material-module/material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { StudentFormComponent } from '../components/student-form/student-form.component';\n\n@NgModule({\n  declarations: [TableHogwartsComponent, StudentFormComponent],\n  imports: [CommonModule, MaterialModule, FormsModule, ReactiveFormsModule],\n  exports: [\n    CommonModule,\n    TableHogwartsComponent,\n    StudentFormComponent,\n    MaterialModule,\n  ],\n})\nexport class SharedModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "StudentFormComponent"
                        },
                        {
                            "name": "TableHogwartsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "MaterialModule"
                        },
                        {
                            "name": "StudentFormComponent"
                        },
                        {
                            "name": "TableHogwartsComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "StudentsModule",
            "id": "module-StudentsModule-f1d7c44983503f0c1b92148d97fe6f97",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/students/students.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StudentsRoutingModule } from './students-routing.module';\nimport { StudentsComponent } from './students.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n\n@NgModule({\n  declarations: [\n    StudentsComponent\n  ],\n  imports: [\n    CommonModule,\n    StudentsRoutingModule,\n    SharedModule,\n  ]\n})\nexport class StudentsModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "StudentsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        },
                        {
                            "name": "StudentsRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "StudentsRoutingModule",
            "id": "module-StudentsRoutingModule-3aa3d6d4c2a59bffaae16b4ea6e06425",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/students/students-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { StudentsComponent } from './students.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StudentsComponent,\n  },\n  {\n    path: '**',\n    redirectTo: '/'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class StudentsRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TeachersModule",
            "id": "module-TeachersModule-d4a46478ff5fdb87fdf8bfbcddadc58f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/teachers/teachers.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TeachersRoutingModule } from './teachers-routing.module';\nimport { TeachersComponent } from './teachers.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n\n@NgModule({\n  declarations: [\n    TeachersComponent\n  ],\n  imports: [\n    CommonModule,\n    TeachersRoutingModule,\n    SharedModule,\n  ]\n})\nexport class TeachersModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TeachersComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        },
                        {
                            "name": "TeachersRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TeachersRoutingModule",
            "id": "module-TeachersRoutingModule-eb73dfdc49b700a45efde58fb0b95343",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/teachers/teachers-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TeachersComponent } from './teachers.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TeachersComponent,\n  },\n  {\n    path: '**',\n    redirectTo: '/'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TeachersRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "calculateAge",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/utils/calculateAge.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(dateOfBirth: string, yearOfBirth?: number): number => {\n  if (dateOfBirth) {\n    const currentDate = new Date();\n    const [day, month, year] = dateOfBirth.split('-');\n    \n    const currentDay = currentDate.getDate();\n    const currentMonth = currentDate.getMonth();\n    const currentYear = currentDate.getFullYear();\n    let age = currentYear - (+year)\n    if ((currentMonth - +month >= 0) && (currentDay - +day > 0)) ++age\n\n    return age;\n  } else if (yearOfBirth) {\n    const currentDate = new Date();\n    const currentYear = currentDate.getFullYear();\n    return currentYear - yearOfBirth\n  }\n  return 0\n}"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/table-hogwarts/table-hogwarts.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DEFAULT_COLUMNS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/table-hogwarts/table-hogwarts.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {\n    columnDef: 'name',\n    header: 'Nombre',\n    textField: 'name',\n  },\n  {\n    columnDef: 'patronus',\n    header: 'Patronus',\n    textField: 'patronus',\n  },\n  {\n    columnDef: 'age',\n    header: 'Edad',\n    textField: 'age',\n  },\n  {\n    columnDef: 'image',\n    header: 'Foto',\n    textField: 'image',\n  },\n]"
            },
            {
                "name": "DEFAULT_DISPLAYED_COLUMNS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/table-hogwarts/table-hogwarts.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "DEFAULT_COLUMNS.map((v) => v.columnDef)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  urlAPI: 'http://hp-api.herokuapp.com/api',\n}"
            },
            {
                "name": "getData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/table-hogwarts/table-hogwarts.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(): BaseData[] => {\n  const newArr: BaseData[] = []\n\n  for (let i = 0; i < 9; i++) {\n    newArr.push({\n      name: `Example Name (${i + 1})`,\n      patronus: `Example Patronus (${i + 1})`,\n      age: (i + 3) * 3,\n      image: 'https://picsum.photos/200/300',\n    })\n  }\n  return newArr;\n}"
            },
            {
                "name": "HOUSES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/characters/characters.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  { value: 'slytherin', viewValue: 'Slytherin' },\n  { value: 'gryffindor', viewValue: 'Gryffindor' },\n  { value: 'ravenclaw', viewValue: 'Ravenclaw' },\n  { value: 'hufflepuff', viewValue: 'Hufflepuff' },\n]"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/table-hogwarts/table-hogwarts.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TableHogwartsComponent>",
                "defaultValue": "(args) => ({\n  component: TableHogwartsComponent,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "WithData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/table-hogwarts/table-hogwarts.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/utils/calculateAge.ts": [
                {
                    "name": "calculateAge",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/utils/calculateAge.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(dateOfBirth: string, yearOfBirth?: number): number => {\n  if (dateOfBirth) {\n    const currentDate = new Date();\n    const [day, month, year] = dateOfBirth.split('-');\n    \n    const currentDay = currentDate.getDate();\n    const currentMonth = currentDate.getMonth();\n    const currentYear = currentDate.getFullYear();\n    let age = currentYear - (+year)\n    if ((currentMonth - +month >= 0) && (currentDay - +day > 0)) ++age\n\n    return age;\n  } else if (yearOfBirth) {\n    const currentDate = new Date();\n    const currentYear = currentDate.getFullYear();\n    return currentYear - yearOfBirth\n  }\n  return 0\n}"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/app/components/table-hogwarts/table-hogwarts.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/table-hogwarts/table-hogwarts.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DEFAULT_COLUMNS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/table-hogwarts/table-hogwarts.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {\n    columnDef: 'name',\n    header: 'Nombre',\n    textField: 'name',\n  },\n  {\n    columnDef: 'patronus',\n    header: 'Patronus',\n    textField: 'patronus',\n  },\n  {\n    columnDef: 'age',\n    header: 'Edad',\n    textField: 'age',\n  },\n  {\n    columnDef: 'image',\n    header: 'Foto',\n    textField: 'image',\n  },\n]"
                },
                {
                    "name": "DEFAULT_DISPLAYED_COLUMNS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/table-hogwarts/table-hogwarts.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "DEFAULT_COLUMNS.map((v) => v.columnDef)"
                },
                {
                    "name": "getData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/table-hogwarts/table-hogwarts.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(): BaseData[] => {\n  const newArr: BaseData[] = []\n\n  for (let i = 0; i < 9; i++) {\n    newArr.push({\n      name: `Example Name (${i + 1})`,\n      patronus: `Example Patronus (${i + 1})`,\n      age: (i + 3) * 3,\n      image: 'https://picsum.photos/200/300',\n    })\n  }\n  return newArr;\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/table-hogwarts/table-hogwarts.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TableHogwartsComponent>",
                    "defaultValue": "(args) => ({\n  component: TableHogwartsComponent,\n  props: {\n    ...args,\n  },\n})"
                },
                {
                    "name": "WithData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/table-hogwarts/table-hogwarts.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  urlAPI: 'http://hp-api.herokuapp.com/api',\n}"
                }
            ],
            "src/app/pages/characters/characters.component.ts": [
                {
                    "name": "HOUSES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/characters/characters.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  { value: 'slytherin', viewValue: 'Slytherin' },\n  { value: 'gryffindor', viewValue: 'Gryffindor' },\n  { value: 'ravenclaw', viewValue: 'Ravenclaw' },\n  { value: 'hufflepuff', viewValue: 'Hufflepuff' },\n]"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "pathMatch": "full",
                        "redirectTo": "/characters"
                    },
                    {
                        "path": "characters",
                        "loadChildren": "src/app/pages/characters/characters.module#CharactersModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/pages/characters/characters-routing.module.ts",
                                        "module": "CharactersRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "CharactersComponent"
                                            },
                                            {
                                                "path": "**",
                                                "redirectTo": "/"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "CharactersModule"
                            }
                        ]
                    },
                    {
                        "path": "students",
                        "loadChildren": "src/app/pages/students/students.module#StudentsModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/pages/students/students-routing.module.ts",
                                        "module": "StudentsRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "StudentsComponent"
                                            },
                                            {
                                                "path": "**",
                                                "redirectTo": "/"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "StudentsModule"
                            }
                        ]
                    },
                    {
                        "path": "teachers",
                        "loadChildren": "src/app/pages/teachers/teachers.module#TeachersModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/pages/teachers/teachers-routing.module.ts",
                                        "module": "TeachersRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "TeachersComponent"
                                            },
                                            {
                                                "path": "**",
                                                "redirectTo": "/"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "TeachersModule"
                            }
                        ]
                    },
                    {
                        "path": "new-students",
                        "loadChildren": "src/app/pages/new-students/new-students.module#NewStudentsModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/pages/new-students/new-students-routing.module.ts",
                                        "module": "NewStudentsRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "children": [
                                                    {
                                                        "path": "",
                                                        "component": "NewStudentsComponent"
                                                    },
                                                    {
                                                        "path": "create",
                                                        "component": "StudentFormComponent"
                                                    }
                                                ]
                                            },
                                            {
                                                "path": "**",
                                                "redirectTo": "/"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "NewStudentsModule"
                            }
                        ]
                    },
                    {
                        "path": "**",
                        "redirectTo": "/characters"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 2,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/student-form/student-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StudentFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/components/table-hogwarts/table-hogwarts.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableHogwartsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/components/table-hogwarts/table-hogwarts.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/table-hogwarts/table-hogwarts.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_COLUMNS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/table-hogwarts/table-hogwarts.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_DISPLAYED_COLUMNS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/table-hogwarts/table-hogwarts.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/table-hogwarts/table-hogwarts.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/table-hogwarts/table-hogwarts.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/index.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BaseData",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/index.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Character",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/index.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "HogwartsTableHeader",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/index.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Student",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/index.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Teacher",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/characters/characters.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CharactersComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/characters/characters.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "House",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/characters/characters.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HOUSES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/new-students/new-students.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NewStudentsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/students/students.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StudentsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/teachers/teachers.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TeachersComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/services/characters.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CharactersService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/services/new-students.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "NewStudentsService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/services/students.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "StudentsService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/services/teachers.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TeachersService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/utils/calculateAge.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "calculateAge",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}